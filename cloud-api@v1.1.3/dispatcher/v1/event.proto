syntax = "proto3";

package cloud.api.dispatcher.v1;

import "google/api/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "dispatcher/v1/task.proto";

option go_package = "v1";
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_registration) = true;
option (gogoproto.messagename_all) = true;

enum EventType {
    option (gogoproto.goproto_enum_prefix) = false;
    option (gogoproto.enum_customname) = "EventType";

    EVENT_TYPE_UNKNOWN = 0 [(gogoproto.enumvalue_customname) = "EventTypeUnknown"];
    EVENT_TYPE_CREATE = 1 [(gogoproto.enumvalue_customname) = "EventTypeCreate"];
    EVENT_TYPE_UPDATE = 2 [(gogoproto.enumvalue_customname) = "EventTypeUpdate"];
    EVENT_TYPE_DELETE = 3 [(gogoproto.enumvalue_customname) = "EventTypeDelete"];
    EVENT_TYPE_UPDATE_STATUS = 4 [(gogoproto.enumvalue_customname) = "EventTypeUpdateStatus"];
    EVENT_TYPE_TASK_COMPLETED = 5 [(gogoproto.enumvalue_customname) = "EventTypeTaskCompleted"];
    EVENT_TYPE_SEGEMENT_TRANSCODED = 6 [(gogoproto.enumvalue_customname) = "EventTypeSegementTranscoded"];
}

message Event {
    EventType type = 1;
    string task_id = 2 [(gogoproto.customname) = "TaskID"];
    cloud.api.dispatcher.v1.TaskStatus status = 3;
    
    string stream_id = 4 [(gogoproto.customname) = "StreamID"];
    string stream_name = 5;
    string stream_contract_address = 6;
    bool stream_is_live = 7;

    string profile_id = 8 [(gogoproto.customname) = "ProfileID"];
    string profile_name = 9;
    double profile_cost = 10;

    string client_id = 11 [(gogoproto.customname) = "ClientID"];
    string client_user_id = 12 [(gogoproto.customname) = "ClientUserID"];
    string user_id = 13 [(gogoproto.customname) = "UserID"];

    uint64 chunk_num = 14;
    double duration = 15;
    double cost_per_sec = 16;
}
