// Code generated by MockGen. DO NOT EDIT.
// Source: /go_workspace/src/github.com/videocoin/cloud-api/syncer/v1/syncer_service.pb.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
)

// MockSyncerServiceClient is a mock of SyncerServiceClient interface
type MockSyncerServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockSyncerServiceClientMockRecorder
}

// MockSyncerServiceClientMockRecorder is the mock recorder for MockSyncerServiceClient
type MockSyncerServiceClientMockRecorder struct {
	mock *MockSyncerServiceClient
}

// NewMockSyncerServiceClient creates a new mock instance
func NewMockSyncerServiceClient(ctrl *gomock.Controller) *MockSyncerServiceClient {
	mock := &MockSyncerServiceClient{ctrl: ctrl}
	mock.recorder = &MockSyncerServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSyncerServiceClient) EXPECT() *MockSyncerServiceClientMockRecorder {
	return m.recorder
}

// MockSyncerServiceServer is a mock of SyncerServiceServer interface
type MockSyncerServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockSyncerServiceServerMockRecorder
}

// MockSyncerServiceServerMockRecorder is the mock recorder for MockSyncerServiceServer
type MockSyncerServiceServerMockRecorder struct {
	mock *MockSyncerServiceServer
}

// NewMockSyncerServiceServer creates a new mock instance
func NewMockSyncerServiceServer(ctrl *gomock.Controller) *MockSyncerServiceServer {
	mock := &MockSyncerServiceServer{ctrl: ctrl}
	mock.recorder = &MockSyncerServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSyncerServiceServer) EXPECT() *MockSyncerServiceServerMockRecorder {
	return m.recorder
}
