syntax = "proto3";

package cloud.api.streams.private.v1;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/videocoin/cloud-api/streams/v1/stream.proto";
import "github.com/videocoin/cloud-api/streams/v1/profile.proto";

option go_package = "v1";
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_registration) = true;
option (gogoproto.messagename_all) = true;

service StreamsService {
  rpc Get(StreamRequest) returns (StreamResponse) {}
  rpc Publish(StreamRequest) returns (StreamResponse) {}
  rpc PublishDone(StreamRequest) returns (StreamResponse) {}
  rpc Complete(StreamRequest) returns (StreamResponse) {}
  rpc Run(StreamRequest) returns (StreamResponse) {}
  rpc Stop(StreamRequest) returns (StreamResponse) {}
  rpc UpdateStatus(UpdateStatusRequest) returns (StreamResponse) {}
  rpc GetProfile(ProfileRequest) returns (ProfileResponse)  {}
  rpc RenderProfile(ProfileRenderRequest) returns (ProfileRenderResponse) {}
}

message StreamRequest {
  string id = 1;
  double duration = 2;
}

message StreamResponse {
  string id = 1 [(gogoproto.customname) = "ID"];
  string name = 2;

  string profile_id = 3 [(gogoproto.customname) = "ProfileID"];
  double profile_cost = 16;

  string input_url = 4 [(gogoproto.customname) = "InputURL"];
  string output_url = 5 [(gogoproto.customname) = "OutputURL"];

  uint64 stream_contract_id = 7 [(gogoproto.customname) = "StreamContractID"];
  string stream_contract_address = 8;

  streams.v1.StreamStatus status = 9;
  streams.v1.InputStatus input_status = 10;

  google.protobuf.Timestamp created_at = 11 [
      (gogoproto.stdtime) = true
  ];

  google.protobuf.Timestamp updated_at = 17 [
      (gogoproto.stdtime) = true
  ];

  google.protobuf.Timestamp ready_at = 12 [
      (gogoproto.stdtime) = true
  ];

  google.protobuf.Timestamp completed_at = 13 [
      (gogoproto.stdtime) = true
  ];

  string user_id = 14 [(gogoproto.customname) = "UserID"];

  streams.v1.InputType input_type = 15;
  streams.v1.OutputType output_type = 18;
}

message UpdateStatusRequest {
  string id = 1 [(gogoproto.customname) = "ID"];
  streams.v1.StreamStatus status = 2;
}

message ProfileRequest {
  string id = 1 [
    (gogoproto.moretags) = "validate:\"required\"",
    (gogoproto.customname) = "ID"
  ];
}

message ProfileResponse {
  string id = 1 [(gogoproto.customname) = "ID"];
  string name = 2;
  string description = 3;
  bool is_enabled = 4;
  string machine_type = 5;
  double cost = 6;
  repeated cloud.api.streams.v1.Component components = 7;
  cloud.api.streams.v1.CapacityInfo capacity = 8;
}

message ProfileRenderRequest {
  string id = 1 [
  (gogoproto.moretags) = "validate:\"required\"",
  (gogoproto.customname) = "ID"
];
  string input = 2 [
  (gogoproto.moretags) = "validate:\"required\""
];
  string output = 3 [
  (gogoproto.moretags) = "validate:\"required\""
];
repeated cloud.api.streams.v1.Component components = 4;
}

message ProfileRenderResponse {
  string render = 1;
}