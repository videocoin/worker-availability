# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: streams/v1/streams_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from protoc_gen_swagger.options import annotations_pb2 as protoc__gen__swagger_dot_options_dot_annotations__pb2
from github.com.gogo.protobuf.gogoproto import gogo_pb2 as github_dot_com_dot_gogo_dot_protobuf_dot_gogoproto_dot_gogo__pb2
from streams.v1 import stream_pb2 as streams_dot_v1_dot_stream__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='streams/v1/streams_service.proto',
  package='cloud.api.streams.v1',
  syntax='proto3',
  serialized_options=_b('Z\002v1\310\342\036\001\320\342\036\001\340\342\036\001\300\343\036\001\310\343\036\001\222A\336\002\022\024\n\rVideocoin api2\0031.0*\001\0022\020application/json:\020application/jsonR1\n\003401\022*\n(Returned when the user is not logged in.RP\n\003403\022I\nGReturned when the user does not have permission to access the resource.Rc\n\003404\022\\\n*Returned when the resource does not exist.\022.2,\022*{ \"message\": \"Not found\", \"fields\": null }Z#\n!\n\nApiKeyAuth\022\023\010\002\032\rAuthorization \002b\020\n\016\n\nApiKeyAuth\022\000'),
  serialized_pb=_b('\n streams/v1/streams_service.proto\x12\x14\x63loud.api.streams.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a,protoc-gen-swagger/options/annotations.proto\x1a-github.com/gogo/protobuf/gogoproto/gogo.proto\x1a\x17streams/v1/stream.proto\"\xeb\x02\n\x13\x43reateStreamRequest\x12\x80\x01\n\x04name\x18\x01 \x01(\tBr\xf2\xde\x1f validate:\"required,gt=0,lte=255\"\x92\x41K2BName of stream being created. Length is between 1 and 255 symbols.\xd2\x01\x04name\x12\xb5\x01\n\nprofile_id\x18\x02 \x01(\tB\xa0\x01\xf2\xde\x1f\x13validate:\"required\"\x92\x41\x85\x01\x32vID of output transcoding profile that will be used to transcode the incoming stream. Read more under Profiles section.\xd2\x01\nprofile_id:\x19\x92\x41\x16\n\x14\xd2\x01\x04name\xd2\x01\nprofile_id\"7\n\rStreamRequest\x12\x1a\n\x02id\x18\x01 \x01(\tB\x0e\x92\x41\x0b\x32\tStream ID:\n\x92\x41\x07\n\x05\xd2\x01\x02id\"\xf1\x04\n\x13UpdateStreamRequest\x12\x1a\n\x02id\x18\x01 \x01(\tB\x0e\x92\x41\x0b\x32\tStream ID\x12x\n\x04name\x18\x02 \x01(\tBj\xf2\xde\x1f validate:\"required,gt=0,lte=255\"\x92\x41\x43\x32\x41Name of stream being created. Length is between 1 and 255 symbols\x12\x44\n\x12stream_contract_id\x18\x03 \x01(\x04\x42(\x92\x41%2#Stream ID in VideoCoin stream chain\x12=\n\x17stream_contract_address\x18\x04 \x01(\tB\x1c\x92\x41\x19\x32\x17Stream contract address\x12\x80\x01\n\x06status\x18\x05 \x01(\x0e\x32\".cloud.api.streams.v1.StreamStatusBL\x92\x41I2GThe status of a stream is affected by API calls made on a stream object\x12\xad\x01\n\x0cinput_status\x18\x06 \x01(\x0e\x32!.cloud.api.streams.v1.InputStatusBt\x92\x41q2oThe status of a stream\'s ingest is affected by the state of the encoder that\'s sending video data to the stream:\x0c\x92\x41\t\n\x07\xd2\x01\x04name\"\xaa\x12\n\x0eStreamResponse\x12H\n\x02id\x18\x01 \x01(\tB<\x92\x41\x39\x32\x37ID that VideoCoin uses to uniquely identify each stream\x12%\n\x04name\x18\x02 \x01(\tB\x17\x92\x41\x14\x32\x12Name of the stream\x12\x35\n\tinput_url\x18\x04 \x01(\tB\"\x92\x41\x1f\x32\x1dInput URL of transcoded video\x12>\n\noutput_url\x18\x05 \x01(\tB*\x92\x41\'2%Unique output URL of transcoded video\x12\x44\n\x12stream_contract_id\x18\x07 \x01(\x04\x42(\x92\x41%2#Stream ID in VideoCoin stream chain\x12t\n\x17stream_contract_address\x18\x08 \x01(\tBS\x92\x41P2NStream hex address in VideoCoin chain. Empty until stream is in prepared state\x12\x61\n\x06status\x18\t \x01(\x0e\x32\".cloud.api.streams.v1.StreamStatusB-\x92\x41*2(Status of the stream\'s operational state\x12\x61\n\x0cinput_status\x18\n \x01(\x0e\x32!.cloud.api.streams.v1.InputStatusB(\x92\x41%2#Status of the stream\'s video ingest\x12k\n\ncreated_at\x18\x0b \x01(\x0b\x32\x1a.google.protobuf.TimestampB;\x90\xdf\x1f\x01\x92\x41\x34\x32\x32\x44\x61te and time of when stream was initially created\x12n\n\nupdated_at\x18\x11 \x01(\x0b\x32\x1a.google.protobuf.TimestampB>\x90\xdf\x1f\x01\x92\x41\x37\x32\x35\x44\x61te and time of when stream\'s state was last changed\x12\xce\x01\n\x08ready_at\x18\x0c \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x9f\x01\x90\xdf\x1f\x01\x92\x41\x97\x01\x32\x94\x01\x44\x61te and time of when stream\'s ingest has received and completed processing input video data. This field will be null until stream is in ready state\x12\xa6\x01\n\x0c\x63ompleted_at\x18\r \x01(\x0b\x32\x1a.google.protobuf.TimestampBt\x90\xdf\x1f\x01\x92\x41m2kDate and time of when stream was called to stop. This field will be null until stream is in completed state\x12\x8e\x01\n\x08rtmp_url\x18\x0e \x01(\tB|\x92\x41y2wUnique ingest RTMP URL for stream to receive video data from encoder. This URL is used for your encoder to send data to:\xc5\x07\x92\x41\xc1\x07\n\xb1\x02\x32\xae\x02Streams are representations of video to be worked on by miners on the VideoCoin Network and output consumable video based on the transcoding profile given at creation. Streams currently only support video input over RTMP. Support for input video over RTSP and HLS will be considered in future releases.2\x8a\x05\x12\x87\x05{ \"id\": \"4a1c3973-8cf6-49af-4a56-7a1d49c2bac6\", \"name\": \"Live\", \"input_url\": \"http://rtmp.studio.videocoin.network/hls/4a1c3973-8cf6-49af-4a56-7a1d49c2bac6/index.m3u8\", \"output_url\": \"https://streams.videocoin.network/4a1c3973-8cf6-49af-4a56-7a1d49c2bac6/index.m3u8\", \"stream_contract_id\": \"2758350251200610030\", \"stream_contract_address\": \"\", \"status\": \"STREAM_STATUS_NEW\", \"input_status\": \"INPUT_STATUS_NONE\", \"created_at\": \"2019-11-06T19:31:03.059408235Z\", \"updated_at\": \"2019-11-06T19:31:03.059460430Z\", \"ready_at\": null, \"completed_at\": null, \"rtmp_url\": \"rtmp://rtmp.studio.videocoin.network:1935/live/4a1c3973-8cf6-49af-4a56-7a1d49c2bac6\" }\"\xf1\x05\n\x12StreamListResponse\x12\x33\n\x05items\x18\x01 \x03(\x0b\x32$.cloud.api.streams.v1.StreamResponse:\xa5\x05\x92\x41\xa1\x05\n\x12\x32\x10List of streams.2\x8a\x05\x12\x87\x05{ \"id\": \"4a1c3973-8cf6-49af-4a56-7a1d49c2bac6\", \"name\": \"Live\", \"input_url\": \"http://rtmp.studio.videocoin.network/hls/4a1c3973-8cf6-49af-4a56-7a1d49c2bac6/index.m3u8\", \"output_url\": \"https://streams.videocoin.network/4a1c3973-8cf6-49af-4a56-7a1d49c2bac6/index.m3u8\", \"stream_contract_id\": \"2758350251200610030\", \"stream_contract_address\": \"\", \"status\": \"STREAM_STATUS_NEW\", \"input_status\": \"INPUT_STATUS_NONE\", \"created_at\": \"2019-11-06T19:31:03.059408235Z\", \"updated_at\": \"2019-11-06T19:31:03.059460430Z\", \"ready_at\": null, \"completed_at\": null, \"rtmp_url\": \"rtmp://rtmp.studio.videocoin.network:1935/live/4a1c3973-8cf6-49af-4a56-7a1d49c2bac6\" }2\xa9\x08\n\rStreamService\x12\xa4\x02\n\x06\x43reate\x12).cloud.api.streams.v1.CreateStreamRequest\x1a$.cloud.api.streams.v1.StreamResponse\"\xc8\x01\x92\x41\xaa\x01J\xa7\x01\n\x03\x34\x30\x30\x12\x9f\x01\nEStream has been failed to create because a required field is missing.\x12V2T\x12R{ \"message\": \"invalid argument\", \"fields\": { \"name\": \"Name is a required field\" }}\x82\xd3\xe4\x93\x02\x14\"\x0f/api/v1/streams:\x01*\x12n\n\x03Get\x12#.cloud.api.streams.v1.StreamRequest\x1a$.cloud.api.streams.v1.StreamResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/api/v1/streams/{id}\x12\x63\n\x06\x44\x65lete\x12#.cloud.api.streams.v1.StreamRequest\x1a\x16.google.protobuf.Empty\"\x1c\x82\xd3\xe4\x93\x02\x16*\x14/api/v1/streams/{id}\x12\x61\n\x04List\x12\x16.google.protobuf.Empty\x1a(.cloud.api.streams.v1.StreamListResponse\"\x17\x82\xd3\xe4\x93\x02\x11\x12\x0f/api/v1/streams\x12z\n\x06Update\x12).cloud.api.streams.v1.UpdateStreamRequest\x1a$.cloud.api.streams.v1.StreamResponse\"\x1f\x82\xd3\xe4\x93\x02\x19\x1a\x14/api/v1/streams/{id}:\x01*\x12S\n\x0cUpdateStatus\x12).cloud.api.streams.v1.UpdateStreamRequest\x1a\x16.google.protobuf.Empty\"\x00\x12r\n\x03Run\x12#.cloud.api.streams.v1.StreamRequest\x1a$.cloud.api.streams.v1.StreamResponse\" \x82\xd3\xe4\x93\x02\x1a\"\x18/api/v1/streams/{id}/run\x12t\n\x04Stop\x12#.cloud.api.streams.v1.StreamRequest\x1a$.cloud.api.streams.v1.StreamResponse\"!\x82\xd3\xe4\x93\x02\x1b\"\x19/api/v1/streams/{id}/stopB\xfa\x02Z\x02v1\xc8\xe2\x1e\x01\xd0\xe2\x1e\x01\xe0\xe2\x1e\x01\xc0\xe3\x1e\x01\xc8\xe3\x1e\x01\x92\x41\xde\x02\x12\x14\n\rVideocoin api2\x03\x31.0*\x01\x02\x32\x10\x61pplication/json:\x10\x61pplication/jsonR1\n\x03\x34\x30\x31\x12*\n(Returned when the user is not logged in.RP\n\x03\x34\x30\x33\x12I\nGReturned when the user does not have permission to access the resource.Rc\n\x03\x34\x30\x34\x12\\\n*Returned when the resource does not exist.\x12.2,\x12*{ \"message\": \"Not found\", \"fields\": null }Z#\n!\n\nApiKeyAuth\x12\x13\x08\x02\x1a\rAuthorization \x02\x62\x10\n\x0e\n\nApiKeyAuth\x12\x00\x62\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,google_dot_api_dot_annotations__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,protoc__gen__swagger_dot_options_dot_annotations__pb2.DESCRIPTOR,github_dot_com_dot_gogo_dot_protobuf_dot_gogoproto_dot_gogo__pb2.DESCRIPTOR,streams_dot_v1_dot_stream__pb2.DESCRIPTOR,])




_CREATESTREAMREQUEST = _descriptor.Descriptor(
  name='CreateStreamRequest',
  full_name='cloud.api.streams.v1.CreateStreamRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='cloud.api.streams.v1.CreateStreamRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\362\336\037 validate:\"required,gt=0,lte=255\"\222AK2BName of stream being created. Length is between 1 and 255 symbols.\322\001\004name'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='profile_id', full_name='cloud.api.streams.v1.CreateStreamRequest.profile_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\362\336\037\023validate:\"required\"\222A\205\0012vID of output transcoding profile that will be used to transcode the incoming stream. Read more under Profiles section.\322\001\nprofile_id'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222A\026\n\024\322\001\004name\322\001\nprofile_id'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=269,
  serialized_end=632,
)


_STREAMREQUEST = _descriptor.Descriptor(
  name='StreamRequest',
  full_name='cloud.api.streams.v1.StreamRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='cloud.api.streams.v1.StreamRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0132\tStream ID'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222A\007\n\005\322\001\002id'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=634,
  serialized_end=689,
)


_UPDATESTREAMREQUEST = _descriptor.Descriptor(
  name='UpdateStreamRequest',
  full_name='cloud.api.streams.v1.UpdateStreamRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='cloud.api.streams.v1.UpdateStreamRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0132\tStream ID'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='cloud.api.streams.v1.UpdateStreamRequest.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\362\336\037 validate:\"required,gt=0,lte=255\"\222AC2AName of stream being created. Length is between 1 and 255 symbols'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stream_contract_id', full_name='cloud.api.streams.v1.UpdateStreamRequest.stream_contract_id', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A%2#Stream ID in VideoCoin stream chain'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stream_contract_address', full_name='cloud.api.streams.v1.UpdateStreamRequest.stream_contract_address', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0312\027Stream contract address'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='status', full_name='cloud.api.streams.v1.UpdateStreamRequest.status', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222AI2GThe status of a stream is affected by API calls made on a stream object'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='input_status', full_name='cloud.api.streams.v1.UpdateStreamRequest.input_status', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222Aq2oThe status of a stream\'s ingest is affected by the state of the encoder that\'s sending video data to the stream'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222A\t\n\007\322\001\004name'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=692,
  serialized_end=1317,
)


_STREAMRESPONSE = _descriptor.Descriptor(
  name='StreamResponse',
  full_name='cloud.api.streams.v1.StreamResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='cloud.api.streams.v1.StreamResponse.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A927ID that VideoCoin uses to uniquely identify each stream'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='cloud.api.streams.v1.StreamResponse.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0242\022Name of the stream'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='input_url', full_name='cloud.api.streams.v1.StreamResponse.input_url', index=2,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0372\035Input URL of transcoded video'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_url', full_name='cloud.api.streams.v1.StreamResponse.output_url', index=3,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\'2%Unique output URL of transcoded video'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stream_contract_id', full_name='cloud.api.streams.v1.StreamResponse.stream_contract_id', index=4,
      number=7, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A%2#Stream ID in VideoCoin stream chain'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stream_contract_address', full_name='cloud.api.streams.v1.StreamResponse.stream_contract_address', index=5,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222AP2NStream hex address in VideoCoin chain. Empty until stream is in prepared state'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='status', full_name='cloud.api.streams.v1.StreamResponse.status', index=6,
      number=9, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A*2(Status of the stream\'s operational state'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='input_status', full_name='cloud.api.streams.v1.StreamResponse.input_status', index=7,
      number=10, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A%2#Status of the stream\'s video ingest'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='created_at', full_name='cloud.api.streams.v1.StreamResponse.created_at', index=8,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\220\337\037\001\222A422Date and time of when stream was initially created'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='updated_at', full_name='cloud.api.streams.v1.StreamResponse.updated_at', index=9,
      number=17, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\220\337\037\001\222A725Date and time of when stream\'s state was last changed'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ready_at', full_name='cloud.api.streams.v1.StreamResponse.ready_at', index=10,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\220\337\037\001\222A\227\0012\224\001Date and time of when stream\'s ingest has received and completed processing input video data. This field will be null until stream is in ready state'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='completed_at', full_name='cloud.api.streams.v1.StreamResponse.completed_at', index=11,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\220\337\037\001\222Am2kDate and time of when stream was called to stop. This field will be null until stream is in completed state'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rtmp_url', full_name='cloud.api.streams.v1.StreamResponse.rtmp_url', index=12,
      number=14, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222Ay2wUnique ingest RTMP URL for stream to receive video data from encoder. This URL is used for your encoder to send data to'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222A\301\007\n\261\0022\256\002Streams are representations of video to be worked on by miners on the VideoCoin Network and output consumable video based on the transcoding profile given at creation. Streams currently only support video input over RTMP. Support for input video over RTSP and HLS will be considered in future releases.2\212\005\022\207\005{ \"id\": \"4a1c3973-8cf6-49af-4a56-7a1d49c2bac6\", \"name\": \"Live\", \"input_url\": \"http://rtmp.studio.videocoin.network/hls/4a1c3973-8cf6-49af-4a56-7a1d49c2bac6/index.m3u8\", \"output_url\": \"https://streams.videocoin.network/4a1c3973-8cf6-49af-4a56-7a1d49c2bac6/index.m3u8\", \"stream_contract_id\": \"2758350251200610030\", \"stream_contract_address\": \"\", \"status\": \"STREAM_STATUS_NEW\", \"input_status\": \"INPUT_STATUS_NONE\", \"created_at\": \"2019-11-06T19:31:03.059408235Z\", \"updated_at\": \"2019-11-06T19:31:03.059460430Z\", \"ready_at\": null, \"completed_at\": null, \"rtmp_url\": \"rtmp://rtmp.studio.videocoin.network:1935/live/4a1c3973-8cf6-49af-4a56-7a1d49c2bac6\" }'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1320,
  serialized_end=3666,
)


_STREAMLISTRESPONSE = _descriptor.Descriptor(
  name='StreamListResponse',
  full_name='cloud.api.streams.v1.StreamListResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='items', full_name='cloud.api.streams.v1.StreamListResponse.items', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222A\241\005\n\0222\020List of streams.2\212\005\022\207\005{ \"id\": \"4a1c3973-8cf6-49af-4a56-7a1d49c2bac6\", \"name\": \"Live\", \"input_url\": \"http://rtmp.studio.videocoin.network/hls/4a1c3973-8cf6-49af-4a56-7a1d49c2bac6/index.m3u8\", \"output_url\": \"https://streams.videocoin.network/4a1c3973-8cf6-49af-4a56-7a1d49c2bac6/index.m3u8\", \"stream_contract_id\": \"2758350251200610030\", \"stream_contract_address\": \"\", \"status\": \"STREAM_STATUS_NEW\", \"input_status\": \"INPUT_STATUS_NONE\", \"created_at\": \"2019-11-06T19:31:03.059408235Z\", \"updated_at\": \"2019-11-06T19:31:03.059460430Z\", \"ready_at\": null, \"completed_at\": null, \"rtmp_url\": \"rtmp://rtmp.studio.videocoin.network:1935/live/4a1c3973-8cf6-49af-4a56-7a1d49c2bac6\" }'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3669,
  serialized_end=4422,
)

_UPDATESTREAMREQUEST.fields_by_name['status'].enum_type = streams_dot_v1_dot_stream__pb2._STREAMSTATUS
_UPDATESTREAMREQUEST.fields_by_name['input_status'].enum_type = streams_dot_v1_dot_stream__pb2._INPUTSTATUS
_STREAMRESPONSE.fields_by_name['status'].enum_type = streams_dot_v1_dot_stream__pb2._STREAMSTATUS
_STREAMRESPONSE.fields_by_name['input_status'].enum_type = streams_dot_v1_dot_stream__pb2._INPUTSTATUS
_STREAMRESPONSE.fields_by_name['created_at'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_STREAMRESPONSE.fields_by_name['updated_at'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_STREAMRESPONSE.fields_by_name['ready_at'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_STREAMRESPONSE.fields_by_name['completed_at'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_STREAMLISTRESPONSE.fields_by_name['items'].message_type = _STREAMRESPONSE
DESCRIPTOR.message_types_by_name['CreateStreamRequest'] = _CREATESTREAMREQUEST
DESCRIPTOR.message_types_by_name['StreamRequest'] = _STREAMREQUEST
DESCRIPTOR.message_types_by_name['UpdateStreamRequest'] = _UPDATESTREAMREQUEST
DESCRIPTOR.message_types_by_name['StreamResponse'] = _STREAMRESPONSE
DESCRIPTOR.message_types_by_name['StreamListResponse'] = _STREAMLISTRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CreateStreamRequest = _reflection.GeneratedProtocolMessageType('CreateStreamRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATESTREAMREQUEST,
  '__module__' : 'streams.v1.streams_service_pb2'
  # @@protoc_insertion_point(class_scope:cloud.api.streams.v1.CreateStreamRequest)
  })
_sym_db.RegisterMessage(CreateStreamRequest)

StreamRequest = _reflection.GeneratedProtocolMessageType('StreamRequest', (_message.Message,), {
  'DESCRIPTOR' : _STREAMREQUEST,
  '__module__' : 'streams.v1.streams_service_pb2'
  # @@protoc_insertion_point(class_scope:cloud.api.streams.v1.StreamRequest)
  })
_sym_db.RegisterMessage(StreamRequest)

UpdateStreamRequest = _reflection.GeneratedProtocolMessageType('UpdateStreamRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATESTREAMREQUEST,
  '__module__' : 'streams.v1.streams_service_pb2'
  # @@protoc_insertion_point(class_scope:cloud.api.streams.v1.UpdateStreamRequest)
  })
_sym_db.RegisterMessage(UpdateStreamRequest)

StreamResponse = _reflection.GeneratedProtocolMessageType('StreamResponse', (_message.Message,), {
  'DESCRIPTOR' : _STREAMRESPONSE,
  '__module__' : 'streams.v1.streams_service_pb2'
  # @@protoc_insertion_point(class_scope:cloud.api.streams.v1.StreamResponse)
  })
_sym_db.RegisterMessage(StreamResponse)

StreamListResponse = _reflection.GeneratedProtocolMessageType('StreamListResponse', (_message.Message,), {
  'DESCRIPTOR' : _STREAMLISTRESPONSE,
  '__module__' : 'streams.v1.streams_service_pb2'
  # @@protoc_insertion_point(class_scope:cloud.api.streams.v1.StreamListResponse)
  })
_sym_db.RegisterMessage(StreamListResponse)


DESCRIPTOR._options = None
_CREATESTREAMREQUEST.fields_by_name['name']._options = None
_CREATESTREAMREQUEST.fields_by_name['profile_id']._options = None
_CREATESTREAMREQUEST._options = None
_STREAMREQUEST.fields_by_name['id']._options = None
_STREAMREQUEST._options = None
_UPDATESTREAMREQUEST.fields_by_name['id']._options = None
_UPDATESTREAMREQUEST.fields_by_name['name']._options = None
_UPDATESTREAMREQUEST.fields_by_name['stream_contract_id']._options = None
_UPDATESTREAMREQUEST.fields_by_name['stream_contract_address']._options = None
_UPDATESTREAMREQUEST.fields_by_name['status']._options = None
_UPDATESTREAMREQUEST.fields_by_name['input_status']._options = None
_UPDATESTREAMREQUEST._options = None
_STREAMRESPONSE.fields_by_name['id']._options = None
_STREAMRESPONSE.fields_by_name['name']._options = None
_STREAMRESPONSE.fields_by_name['input_url']._options = None
_STREAMRESPONSE.fields_by_name['output_url']._options = None
_STREAMRESPONSE.fields_by_name['stream_contract_id']._options = None
_STREAMRESPONSE.fields_by_name['stream_contract_address']._options = None
_STREAMRESPONSE.fields_by_name['status']._options = None
_STREAMRESPONSE.fields_by_name['input_status']._options = None
_STREAMRESPONSE.fields_by_name['created_at']._options = None
_STREAMRESPONSE.fields_by_name['updated_at']._options = None
_STREAMRESPONSE.fields_by_name['ready_at']._options = None
_STREAMRESPONSE.fields_by_name['completed_at']._options = None
_STREAMRESPONSE.fields_by_name['rtmp_url']._options = None
_STREAMRESPONSE._options = None
_STREAMLISTRESPONSE._options = None

_STREAMSERVICE = _descriptor.ServiceDescriptor(
  name='StreamService',
  full_name='cloud.api.streams.v1.StreamService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=4425,
  serialized_end=5490,
  methods=[
  _descriptor.MethodDescriptor(
    name='Create',
    full_name='cloud.api.streams.v1.StreamService.Create',
    index=0,
    containing_service=None,
    input_type=_CREATESTREAMREQUEST,
    output_type=_STREAMRESPONSE,
    serialized_options=_b('\222A\252\001J\247\001\n\003400\022\237\001\nEStream has been failed to create because a required field is missing.\022V2T\022R{ \"message\": \"invalid argument\", \"fields\": { \"name\": \"Name is a required field\" }}\202\323\344\223\002\024\"\017/api/v1/streams:\001*'),
  ),
  _descriptor.MethodDescriptor(
    name='Get',
    full_name='cloud.api.streams.v1.StreamService.Get',
    index=1,
    containing_service=None,
    input_type=_STREAMREQUEST,
    output_type=_STREAMRESPONSE,
    serialized_options=_b('\202\323\344\223\002\026\022\024/api/v1/streams/{id}'),
  ),
  _descriptor.MethodDescriptor(
    name='Delete',
    full_name='cloud.api.streams.v1.StreamService.Delete',
    index=2,
    containing_service=None,
    input_type=_STREAMREQUEST,
    output_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    serialized_options=_b('\202\323\344\223\002\026*\024/api/v1/streams/{id}'),
  ),
  _descriptor.MethodDescriptor(
    name='List',
    full_name='cloud.api.streams.v1.StreamService.List',
    index=3,
    containing_service=None,
    input_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    output_type=_STREAMLISTRESPONSE,
    serialized_options=_b('\202\323\344\223\002\021\022\017/api/v1/streams'),
  ),
  _descriptor.MethodDescriptor(
    name='Update',
    full_name='cloud.api.streams.v1.StreamService.Update',
    index=4,
    containing_service=None,
    input_type=_UPDATESTREAMREQUEST,
    output_type=_STREAMRESPONSE,
    serialized_options=_b('\202\323\344\223\002\031\032\024/api/v1/streams/{id}:\001*'),
  ),
  _descriptor.MethodDescriptor(
    name='UpdateStatus',
    full_name='cloud.api.streams.v1.StreamService.UpdateStatus',
    index=5,
    containing_service=None,
    input_type=_UPDATESTREAMREQUEST,
    output_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Run',
    full_name='cloud.api.streams.v1.StreamService.Run',
    index=6,
    containing_service=None,
    input_type=_STREAMREQUEST,
    output_type=_STREAMRESPONSE,
    serialized_options=_b('\202\323\344\223\002\032\"\030/api/v1/streams/{id}/run'),
  ),
  _descriptor.MethodDescriptor(
    name='Stop',
    full_name='cloud.api.streams.v1.StreamService.Stop',
    index=7,
    containing_service=None,
    input_type=_STREAMREQUEST,
    output_type=_STREAMRESPONSE,
    serialized_options=_b('\202\323\344\223\002\033\"\031/api/v1/streams/{id}/stop'),
  ),
])
_sym_db.RegisterServiceDescriptor(_STREAMSERVICE)

DESCRIPTOR.services_by_name['StreamService'] = _STREAMSERVICE

# @@protoc_insertion_point(module_scope)
