syntax = "proto3";

package cloud.api.streams.v1;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "protoc-gen-swagger/options/annotations.proto";

option go_package = "v1";
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_registration) = true;
option (gogoproto.messagename_all) = true;

// The status of a stream is affected by API calls made on a stream object.
enum StreamStatus {
    option (gogoproto.goproto_enum_prefix) = false;
    option (gogoproto.enum_customname) = "StreamStatus";

    // Status not set
    STREAM_STATUS_NONE = 0 [ (gogoproto.enumvalue_customname) = "StreamStatusNone" ];
    // Initially created and no actions have been taken
    STREAM_STATUS_NEW = 1 [ (gogoproto.enumvalue_customname) = "StreamStatusNew" ];
    // Running and preparing input and output destinations
    STREAM_STATUS_PREPARING = 2 [ (gogoproto.enumvalue_customname) = "StreamStatusPreparing" ];
    // Preparation is finished and is ready to consume input data
    STREAM_STATUS_PREPARED = 3 [ (gogoproto.enumvalue_customname) = "StreamStatusPrepared" ];
    // Receiving data and pending on miner to be assigned to stream
    STREAM_STATUS_PENDING = 4 [ (gogoproto.enumvalue_customname) = "StreamStatusPending" ];
    // Miner has started work on stream, but output is not ready for use
    STREAM_STATUS_PROCESSING = 5 [ (gogoproto.enumvalue_customname) = "StreamStatusProcessing" ];
    // Output destination is ready to be consumed
    STREAM_STATUS_READY = 6 [ (gogoproto.enumvalue_customname) = "StreamStatusReady" ];
    // Stream has successfully transcoded video and is now complete
    STREAM_STATUS_COMPLETED = 7 [ (gogoproto.enumvalue_customname) = "StreamStatusCompleted" ];
    // Stream has not yet received any input data and has been cancelled
    STREAM_STATUS_CANCELLED = 8 [ (gogoproto.enumvalue_customname) = "StreamStatusCancelled" ];
    // Stream has attempted to transcode video received, but problems with the transcoder or account caused it to fail
    STREAM_STATUS_FAILED = 9 [ (gogoproto.enumvalue_customname) = "StreamStatusFailed" ];
    STREAM_STATUS_DELETED = 10 [ (gogoproto.enumvalue_customname) = "StreamStatusDeleted" ];
}

// The status of a stream's ingest is affected by the state of the encoder that's sending video data to the stream.
enum InputStatus {
    option (gogoproto.goproto_enum_prefix) = false;
    option (gogoproto.enum_customname) = "InputStatus";
    // The stream has been created or has ended and is not receiving any input
    INPUT_STATUS_NONE = 0 [ (gogoproto.enumvalue_customname) = "InputStatusNone" ];
    // Ingest is awaiting for incoming data
    INPUT_STATUS_PENDING = 1 [ (gogoproto.enumvalue_customname) = "InputStatusPending" ];
    // Ingest is receiving data
    INPUT_STATUS_ACTIVE = 2 [ (gogoproto.enumvalue_customname) = "InputStatusActive" ];
    // Ingest has been failed to process incoming data
    INPUT_STATUS_ERROR = 3 [ (gogoproto.enumvalue_customname) = "InputStatusError" ];
}

enum InputType {
    option (gogoproto.goproto_enum_prefix) = false;
    option (gogoproto.enum_customname) = "InputType";

    INPUT_TYPE_RTMP = 0 [ (gogoproto.enumvalue_customname) = "InputTypeRTMP" ];
    INPUT_TYPE_WEBRTC = 1 [ (gogoproto.enumvalue_customname) = "InputTypeWebRTC" ];
    INPUT_TYPE_FILE = 2 [ (gogoproto.enumvalue_customname) = "InputTypeFile" ];
}

enum OutputType {
    option (gogoproto.goproto_enum_prefix) = false;
    option (gogoproto.enum_customname) = "OutputType";

    OUTPUT_TYPE_HLS = 0 [ (gogoproto.enumvalue_customname) = "OutputTypeHLS" ];
    OUTPUT_TYPE_FILE = 1 [ (gogoproto.enumvalue_customname) = "OutputTypeFile" ];
}